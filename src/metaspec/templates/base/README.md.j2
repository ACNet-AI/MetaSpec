# {{ name }}

{{ description }}

**Version**: {{ version }}  
**Domain**: {{ domain }}  
**Lifecycle**: {{ lifecycle }}

---

## 🚀 Quick Start

### Installation

```bash
pip install {{ package_name }}
```

### Basic Usage

```bash
# Initialize a new specification
{{ package_name }} init my-spec.md

# Validate specification
{{ package_name }} validate my-spec.md

# Generate implementation
{{ package_name }} generate my-spec.md --output ./output
```

---

## 📋 Core Entity: {{ entity.name }}

This toolkit revolves around the `{{ entity.name }}` entity:

{% for field in entity.fields %}
- **{{ field.name }}** (`{{ field.type }}`): {{ field.description }}
{% endfor %}

---

## 🔧 Commands

{% if commands %}
{% for command in commands %}
### `{{ command.name }}`

{{ command.description }}

```bash
{{ package_name }} {{ command.name }}{% if command.options %} [OPTIONS]{% endif %}
```

{% if command.options %}
**Options**:
{% for option in command.options %}
- `--{{ option.name }}` ({{ option.type }}){% if option.required %} *required*{% endif %}: {{ option.description }}
{% endfor %}
{% endif %}

{% endfor %}
{% else %}
### Standard Commands

- `init` - Initialize a new specification
- `validate` - Validate specification against schema
- `generate` - Generate code from specification
{% endif %}

---

## 📖 Documentation

- **AI Guide**: See [AGENTS.md](./AGENTS.md) for AI assistant instructions
- **Constitution**: See [memory/constitution.md](./memory/constitution.md) for rules
- **Examples**: See `examples/` directory

---

## 🏗️ Project Structure

```
{{ name }}/
├── AGENTS.md              # AI agent operation guide
├── README.md              # This file
├── pyproject.toml         # Project configuration
├── memory/
│   └── constitution.md    # Rules and constraints
├── templates/             # Specification templates
└── src/{{ package_name }}/
    ├── cli.py            # CLI entry point
    ├── parser.py         # Spec parser
    ├── validator.py      # Spec validator
    └── generator.py      # Code generator
```

---

## 🤝 Contributing

This project follows spec-driven development principles:

1. Define specifications first
2. Validate before implementing
3. Generate code where possible
4. Document all changes

---

## 📝 License

MIT License

---

**Generated by**: MetaSpec {{ metaspec_version }} on {{ date }}  
**Toolkit Version**: {{ version }}

