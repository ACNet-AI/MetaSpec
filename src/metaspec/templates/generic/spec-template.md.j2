# {{ entity.name }} Specification Template

**Version**: 1.0  
**Domain**: {{ domain }}  
**Last Updated**: {{ date }}

---

## Overview

This is a specification template for defining `{{ entity.name }}` entities.

**Purpose**: [Describe the purpose of this {{ entity.name }}]

---

## Entity Definition: {{ entity.name }}

### Required Fields

{% for field in entity.fields %}
#### `{{ field.name }}`

- **Type**: `{{ field.type }}`
- **Description**: {{ field.description }}
- **Required**: Yes
- **Validation**: [Specify validation rules]
- **Example**: [Provide example value]

{% endfor %}

---

## Specification Format

Use the following YAML format to define a {{ entity.name }}:

```yaml
{{ entity.name | lower }}:
  {% for field in entity.fields %}
{{ field.name }}: [{{ field.type }}]  # {{ field.description }}
  {% endfor %}
```

---

## Example Specification

```yaml
# Example {{ entity.name }} specification
{{ entity.name | lower }}:
  {% for field in entity.fields %}
{{ field.name }}: example_value
  {% endfor %}
```

---

## Validation Rules

1. **Field Presence**: All required fields must be present
{% for field in entity.fields %}
2. **{{ field.name }}**: {{ field.description }}
{% endfor %}

---

## Best Practices

1. **Naming**: Use clear, descriptive names
2. **Documentation**: Document all fields thoroughly
3. **Examples**: Provide concrete examples
4. **Validation**: Include validation criteria

---

## Common Patterns

### Pattern 1: Basic {{ entity.name }}

```yaml
{{ entity.name | lower }}:
  {% for field in entity.fields[:3] %}
{{ field.name }}: simple_value
  {% endfor %}
```

### Pattern 2: Complex {{ entity.name }}

```yaml
{{ entity.name | lower }}:
  {% for field in entity.fields %}
{{ field.name }}:
    # Complex value structure
    value: detailed_value
  {% endfor %}
```

---

## Anti-Patterns

### ❌ Don't: Skip Required Fields

```yaml
# BAD - Missing required fields
{{ entity.name | lower }}:
  {{ entity.fields[0].name }}: only_one_field
```

### ✅ Do: Include All Required Fields

```yaml
# GOOD - All required fields present
{{ entity.name | lower }}:
  {% for field in entity.fields %}
{{ field.name }}: value
  {% endfor %}
```

---

## Testing Your Specification

After creating your specification:

1. **Validate**: Run validation to check correctness
```bash
{{ package_name }} validate your-spec.yaml
```

2. **Generate**: Generate code from specification
```bash
{{ package_name }} generate your-spec.yaml
```

3. **Test**: Test the generated output

---

## References

- [Documentation](./README.md)
- [AI Guide](./AGENTS.md)
- [Constitution](./memory/constitution.md)

---

**Template Version**: 1.0  
**Generated by**: MetaSpec {{ metaspec_version }}

